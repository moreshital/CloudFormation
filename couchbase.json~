{
 "AWSTemplateFormatVersion" : "2010-09-09",
 "Description" : "Template for couchbase server on EC2",
 "Parameters" : {
    
 	"KeyName" : {
                      "Description" : "Please provide existing EC2 KeyPair to enable SSH access to the instances",
      		      "Type" : "AWS::EC2::KeyPair::KeyName",
 		      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
		    },


       "InstanceType" : {
			 "Description" : "Select EC2 instance type for couchbase server",
		         "Type" : "String",
			 "Default" : "t2.small",
			 "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
			 "ConstraintDescription" : "must be a valid EC2 instance type."
		},

	"myVPC": {
                     "Description" : "Please provide VPC Id of a VPC where the couchbase instance needs to be launched",
    	                "Type" : "AWS::EC2::VPC::Id",
			"Default"     : "vpc-f69e0993"
		},

		"MySubnet": {
                        "Description" : "Select subnets where you want launch EC2 instances for couchbase ",
			"Type" : "String",
			"Default": "subnet-3c027e4b"
		},

    "PackageURL" : {
      "Description" : "URL of couchbase server software package",
      "Type" : "String",
      "Default" : "http://packages.couchbase.com/releases/2.0.1/couchbase-server-community_x86_64_2.0.1.rpm"
    },

    "RESTPassword" : {
      "NoEcho": "true",
      "Description" : "Password for REST Administrator API and web-console interface of couchbase. Atleast 6 letter",
      "Type" : "String"
    },

    "RAMPerServer" : {
      "Description" : "RAM quota in MB for each node in the cluster",
      "Type" : "Number",
      "Default" : "500",
      "MinValue" : "200"
    },

    "ExistingClusterHostPort" : {
      "Description" : "Optional 'host:port', if you want to join new node(s) to an existing cluster node.  Leave as 'host:port' to not join to an existing cluster",
      "Type" : "String",
      "Default" : "host:port"
    },

    "UserTag" : {
      "Description" : "Optional tag value, to help track your launched EC2 instances",
      "Type" : "String",
      "Default" : "none"
    },

    "AfterInstall" : {
      "Description" : "Optional single-line sh script to run after install, before configuration/join.",
      "Type" : "String",
      "Default" : "#"
    },

    "AfterConfigure" : {
      "Description" : "Optional single-line sh script to run after configuration/join.",
      "Type" : "String",
      "Default" : "#"
    }
    
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

      "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-6869aa05", "HVMG2" : "ami-a41a3fb3"},
      "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-7172b611", "HVMG2" : "ami-caf253aa"},
      "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-31490d51", "HVMG2" : "ami-00347e60"},
      "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-f9dd458a", "HVMG2" : "ami-e2f7bd91"},
      "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-ea26ce85", "HVMG2" : "ami-d2ff04bd"},
      "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-374db956", "HVMG2" : "ami-4c78d52d"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-2b408b45", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-a59b49c6", "HVMG2" : "ami-f3f95990"},
      "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-dc361ebf", "HVMG2" : "ami-3a122e59"},
      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-ffbdd790", "HVMG2" : "ami-21a7d34e"},
      "us-east-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-f6035893", "HVMG2" : "NOT_SUPPORTED"},
      "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-6dd04501", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-8e6aa0e3", "HVMG2" : "NOT_SUPPORTED"}
    }

  },

  "Resources" : {
   
    "ServerNode0" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
		"SubnetId": { "Ref": "MySubnet" },
        "KeyName" : { "Ref" : "KeyName" },
		
        "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType" : { "Ref" : "InstanceType" },
        "Tags" : [ {
            "Key" : "Name",
            "Value" :  { "Fn::Join" : ["", [ { "Ref" : "AWS::StackName" }, "-0" ]]}
          }, {
            "Key" : "PackageURL",
            "Value" : { "Ref" : "PackageURL" }
          }, {
            "Key" : "UserTag",
            "Value" : { "Ref" : "UserTag" }
          }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash -ex","\n",
            "yum -y install openssl098e","\n",
            "wget ", { "Ref" : "PackageURL" },"\n",
            "rpm -i couchbase*.rpm","\n",
            "/bin/sh -c \"", { "Ref" : "AfterInstall" }, "\"\n",
            "sleep 5","\n",
            
            "if [ \"host:port\" != \"", { "Ref" : "ExistingClusterHostPort" }, "\" ]; then","\n",
            "  echo Existing couchbase cluster...","\n",
            "  /opt/couchbase/bin/couchbase-cli server-add",
            "    -u Administrator -p ", { "Ref" : "RESTPassword" },
            "    -c ", { "Ref" : "ExistingClusterHostPort" },
            "    --server-add=`hostname -i`:8091","\n",
            "else","\n",
            "  echo New couchbase cluster...","\n",
              
              "  /opt/couchbase/bin/couchbase-cli cluster-init -c 127.0.0.1",
              "    --cluster-init-username=Administrator",
              "    --cluster-init-password=", { "Ref" : "RESTPassword" },
              "    --cluster-init-ramsize=", { "Ref" : "RAMPerServer" },"\n",
              
              
            "fi","\n",
            "/bin/sh -c \"", { "Ref" : "AfterConfigure" }, "\"\n"
            
              ,
              "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",",
                                                             "\"Reason\" : \"ServerNode0 node is ready\",",
                                                             "\"UniqueId\" : \"couchbase\",",
                                                             "\"Data\" : \"Done\"}' ",
                    "\"", {"Ref" : "WaitForServerNode0WaitHandle"}, "\"\n"
            
        ]]}}
      }
      
    },
   

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
	    "VpcId" : { "Ref" : "myVPC" },
        "GroupDescription" :
          "Enable SSH access via port 22, web access to 8091, couchbase protocol access to 11211 and 11210, and erlang access",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "8091",
          "ToPort" : "8091",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "11211",
          "ToPort" : "11211",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "11210",
          "ToPort" : "11210",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "4369",
          "ToPort" : "4369",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "21100",
          "ToPort" : "21299",
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },

    "WaitForServerNode0WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
      }
    },

    "WaitForServerNode0" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "ServerNode0",
      "Properties" : {
        "Handle" : {"Ref" : "WaitForServerNode0WaitHandle"},
        "Timeout" : "1200"
      }
    }
  },

  "Outputs" : {
    "RESTWebConsoleURL" : {
      "Description" : "The URL for the newly created couchbase node(s)",
      "Value" : { "Fn::Join" : ["", [ "http://", { "Fn::GetAtt" : [ "ServerNode0", "PrivateIp" ] }, ":8091/index.html" ]]}
    }
  }
}
