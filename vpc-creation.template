{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Kenobi Common VPC",
  "Parameters": {
    "Owner": {
      "Description": "Enter Team or Individual Name Responsible for the Stack.",
      "Type": "String",
      "Default": "FirstName LastName"
    },
    "Project": {
      "Description": "Enter Project Name.",
      "Type": "String",
      "Default": "VPC Creation"
    },
    "DeleteAfter": {
      "Description": "Enter Date (MM/DD/YYYY). It's Ok to Delete the Stack or 'Never' if meant to be persistent.",
      "Type": "String",
      "Default": "Never"
    },
    "VPCSubnetCidrBlock": {
      "Description": "Enter VPC CIDR Block. (i.e. 10.0.0.0/16 = 10.0.0.0-10.0.255.255 = 256 Subnets - 65534 hosts)",
      "Type": "String",
      "Default": "10.11.0.0/16",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "AvailabilityZone1": {
      "Description": "Enter Availability Zone 1 for Public and Private Subnets to use.",
      "Type": "String",
      "Default": "d",
      "AllowedValues": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ]
    },
"AvailabilityZone2": {
      "Description": "Enter Availability Zone 1 for Public and Private Subnets to use.",
      "Type": "String",
      "Default": "b",
      "AllowedValues": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ]
    },
    "AvailabilityZone3": {
      "Description": "Enter Availability Zone 1 for Public and Private Subnets to use.",
      "Type": "String",
      "Default": "c",
      "AllowedValues": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ]
    },

  "AvailabilityZone4": {
      "Description": "Enter Availability Zone 1 for Public and Private Subnets to use.",
      "Type": "String",
      "Default": "e",
      "AllowedValues": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ]
    },
    "PublicSubnetCidrBlock1": {
      "Description": "Enter Public Subnet 1 CIDR Block.",
      "Type": "String",
      "Default": "10.11.0.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnetCidrBlock2": {
      "Description": "Enter Public Subnet 2 CIDR Block.",
      "Type": "String",
      "Default": "10.11.1.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
   "PublicSubnetCidrBlock3": {
      "Description": "Enter Public Subnet 3 CIDR Block.",
      "Type": "String",
      "Default": "10.11.2.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
   "PublicSubnetCidrBlock4": {
      "Description": "Enter Public Subnet 4 CIDR Block.",
      "Type": "String",
      "Default": "10.11.3.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock1": {
      "Description": "Enter Private Subnet 1 CIDR Block.",
      "Type": "String",
      "Default": "10.11.128.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
   "PrivateSubnetCidrBlock2": {
      "Description": "Enter Private Subnet 2 CIDR Block.",
      "Type": "String",
      "Default": "10.11.129.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
   "PrivateSubnetCidrBlock3": {
      "Description": "Enter Private Subnet 3 CIDR Block.",
      "Type": "String",
      "Default": "10.11.130.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
   "PrivateSubnetCidrBlock4": {
      "Description": "Enter Private Subnet 4 CIDR Block.",
      "Type": "String",
      "Default": "10.11.131.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
   
    "RemoteAccessNetwork": {
      "Description": "Source Network IP CIDR Block such as an Office that can access instances say over VPN. (i.e. 192.168.100.0/24)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "192.168.100.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },
"AllowHttpToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow HTTP From Internet to Public Network.",
      "Type": "Number",
      "Default": "100"
    },
    "AllowHttpsToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow HTTPS From Internet to Public Network.",
      "Type": "Number",
      "Default": "105"
    },
    "AllowReturnTrafficToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow Return Traffic From Internet to Public Network.",
      "Type": "Number",
      "Default": "110"
    },
    "AllowVpcSubnetsRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow All VPC Subnets Cross Access to Public Network.",
      "Type": "Number",
      "Default": "115"
    },
    "AllowAllOutboundPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow All Outbound Traffic from the Public Network.",
      "Type": "Number",
      "Default": "100"
    },
    "AllowAllInboundPrivateRuleNumber": {
      "Description": "Enter Private Network ACL Rule Number to Allow All Inbound Traffic.",
      "Type": "Number",
      "Default": "100"
    },
    "AllowAllOutboundPrivateRuleNumber": {
      "Description": "Enter Private Network ACL Rule Number to Allow All Outbound Traffic.",
      "Type": "Number",
      "Default": "100"
    },
    "customergatewayIPaddress": {
      "Description": "Enter Internet facing IP of the customer gateway.",
      "Type": "String",
      "Default": "14.142.41.210"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": {"Ref": "VPCSubnetCidrBlock"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Ref": "AWS::StackName"}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
 "VpcCustomerGateway": {
         "Type": "AWS::EC2::CustomerGateway",
           "Properties": {
              "BgpAsn": 65000,
              "IpAddress": {"Ref": "customergatewayIPaddress"},
              "Tags": [
                    {
                        "Key": "Name",
                        "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-cgw"]]}
                    }
              ],
              "Type": "ipsec.1"
         }
     },

    "VpcVpnGateway": {
       "Type": "AWS::EC2::VPNGateway",
       "Properties": {
            "Type": "ipsec.1",
            "Tags": [
                {
                        "Key": "Name",
                        "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-vgw"]]}
                }
             ]
       }
     },

    "VpcVpnGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
              "VpcId" : {"Ref" : "VPC"},
                "VpnGatewayId" : { "Ref" : "VpcVpnGateway" }
       }
    },
     
    
    
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Ref": "AWS::StackName"}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": [
        "InternetGateway",
        "VPC"
      ],
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    
                 "EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"NatGateway": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {"Fn::GetAtt": ["EIP", "AllocationId"]},
				"SubnetId": {"Ref": "PublicSubnet1"}
			}
		},
		"Route": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref": "PrivateRouteTable"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {"Ref": "NatGateway"}
			}
		},
                
                "route2": {
		      "Type": "AWS::EC2::Route",
		        "Properties": {
		        "DestinationCidrBlock": "192.168.0.0/16",
		        "RouteTableId": {"Ref": "PublicRouteTable"},
		        "GatewayId": {"Ref": "VpcVpnGateway"}
			      },
		      "DependsOn": "VpcVpnGatewayAttachment"
			    },
                "route3": {
                        "Type": "AWS::EC2::Route",
		        "Properties": {
		        "DestinationCidrBlock": "192.168.0.0/16",
		        "RouteTableId": {"Ref": "PrivateRouteTable"},
		        "GatewayId": {"Ref": "VpcVpnGateway"}
			      },
		      "DependsOn": "VpcVpnGatewayAttachment"
			    },
		"vpnroutepropogation" : {
 		     "Type" : "AWS::EC2::VPNGatewayRoutePropagation",
  		    "Properties" : {
        		"RouteTableIds" : [
        		  {"Ref" : "PrivateRouteTable"},
        		  {"Ref" : "PublicRouteTable"}
        		],
        		"VpnGatewayId" : {"Ref" : "VpcVpnGateway"}
		      }
		   
		  },

    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone1"}]]},
        "CidrBlock": {"Ref": "PublicSubnetCidrBlock1"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-subnet-1"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
   "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone2"}]]},
        "CidrBlock": {"Ref": "PublicSubnetCidrBlock2"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-subnet2"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
   "PublicSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone3"}]]},
        "CidrBlock": {"Ref": "PublicSubnetCidrBlock3"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-subnet3"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
   "PublicSubnet4": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone4"}]]},
        "CidrBlock": {"Ref": "PublicSubnetCidrBlock4"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-subnet4"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    
  
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "PublicRouteTable",
        "InternetGateway"
      ],
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway"}
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet1",
        "PublicRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet1"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
   "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet2",
        "PublicRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet2"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
   "PublicSubnetRouteTableAssociation3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet3",
        "PublicRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet3"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
   "PublicSubnetRouteTableAssociation4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet4",
        "PublicRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet4"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
   
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone1"}]]},
        "CidrBlock": {"Ref": "PrivateSubnetCidrBlock1"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-subnet-1"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone2"}]]},
        "CidrBlock": {"Ref": "PrivateSubnetCidrBlock2"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-subnet-2"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
   "PrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone3"}]]},
        "CidrBlock": {"Ref": "PrivateSubnetCidrBlock3"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-subnet-3"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
  "PrivateSubnet4": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "AvailabilityZone4"}]]},
        "CidrBlock": {"Ref": "PrivateSubnetCidrBlock4"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-subnet-4"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    "PrivateSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet1",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet1"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
   "PrivateSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet2",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet2"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
   "PrivateSubnetRouteTableAssociation3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet3",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet3"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
   "PrivateSubnetRouteTableAssociation4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet4",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet4"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
    
    
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-acl"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },

"InboundPublicNetworkAclAllowVPCSubnets": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": {"Ref": "AllowVpcSubnetsRuleNumber"},
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPublicNetworkAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": {"Ref": "AllowAllOutboundPublicRuleNumber"},
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PublicSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": ["PublicSubnet1", "PublicNetworkAcl"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet1" },
        "NetworkAclId": {"Ref": "PublicNetworkAcl"}
      }
    },
    "PublicSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": ["PublicSubnet2", "PublicNetworkAcl"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet2" },
        "NetworkAclId": {"Ref": "PublicNetworkAcl"}
      }
    },
   "PublicSubnetNetworkAclAssociation3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": ["PublicSubnet3", "PublicNetworkAcl"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet3" },
        "NetworkAclId": {"Ref": "PublicNetworkAcl"}
      }
    },
   "PublicSubnetNetworkAclAssociation4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": ["PublicSubnet4", "PublicNetworkAcl"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet4" },
        "NetworkAclId": {"Ref": "PublicNetworkAcl"}
      }
    },
   
    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-acl"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    "InboundEphemeralPrivateNetworkAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PrivateNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"},
        "RuleNumber": {"Ref": "AllowAllInboundPrivateRuleNumber"},
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPrivateNetworkAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PrivateNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"},
        "RuleNumber": {"Ref": "AllowAllOutboundPrivateRuleNumber"},
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet1",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet1"},
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"}
      }
    },
    "PrivateSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet2",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet2"},
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"}
      }
    },
   "PrivateSubnetNetworkAclAssociation3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet3",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet3"},
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"}
      }
    },
   "PrivateSubnetNetworkAclAssociation4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet4",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet4"},
        "NetworkAclId": {"Ref": "PrivateNetworkAcl"}
      }
    },
    "InternalAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "VPC",
      "Properties": {
        "GroupDescription": "Instance to Instance Access in VPC",
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-instance-to-instance"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    "InternalAccessSecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "InternalAccessSecurityGroup",
      "Properties": {
        "GroupId": {"Ref": "InternalAccessSecurityGroup"},
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "InternalAccessSecurityGroup"
        }
      }
    },
    "RemoteAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Instance Access over VPN/Direct Connect",
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-remote-to-instance"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "CidrIp": {"Ref": "RemoteAccessNetwork"}
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "Owner": {
      "Description": "Team or Individual that Owns this Formation.",
      "Value": {"Ref": "Owner"}
    },
    "Project": {
      "Description": "The project name",
      "Value": {"Ref": "Project"}
    },
    "VPC": {
      "Description": "Created VPC",
      "Value": {"Ref": "VPC"}
    },
    "VPCCIDR": {
      "Description": "VPC Subnet CIDR Block",
      "Value": {"Ref": "VPCSubnetCidrBlock"}
    },
  
    "PublicRouteTable": {
      "Description": "Public Route Table Created for VPC",
      "Value": {"Ref": "PublicRouteTable"}
    },
    "PrivateRouteTable": {
      "Description": "Private Route Table Created for VPC",
      "Value": {"Ref": "PrivateRouteTable"}
    },
    "PublicNetworkAcl": {
      "Description": "Public Network ACL Created for VPC",
      "Value": {"Ref": "PublicNetworkAcl"}
    },
    "PrivateNetworkAcl": {
      "Description": "Private Netowrk ACL Created for VPC",
      "Value": {"Ref": "PrivateNetworkAcl"}
    },
    "PublicSubnet1": {
      "Description": "Public Subnet 1 Created for VPC",
      "Value": {"Ref": "PublicSubnet1"}
    },
    "PublicSubnet2": {
      "Description": "Public Subnet 2 Created for VPC",
      "Value": {"Ref": "PublicSubnet2"}
    },
    "PublicSubnet3": {
      "Description": "Public Subnet 3 Created for VPC",
      "Value": {"Ref": "PublicSubnet3"}
    },
    "PublicSubnet4": {
      "Description": "Public Subnet 4 Created for VPC",
      "Value": {"Ref": "PublicSubnet4"}
    },
    "PrivateSubnet1": {
      "Description": "Private Subnet 1 Created for VPC",
      "Value": {"Ref": "PrivateSubnet1"}
    },
    "PrivateSubnet2": {
      "Description": "Private Subnet 2 Created for VPC",
      "Value": {"Ref": "PrivateSubnet2"}
    },
    "PrivateSubnet3": {
      "Description": "Private Subnet 3 Created for VPC",
      "Value": {"Ref": "PrivateSubnet3"}
    },
    "PrivateSubnet4": {
      "Description": "Private Subnet 4 Created for VPC",
      "Value": {"Ref": "PrivateSubnet4"}
    },
   
    "AvailabilityZone1": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {"Fn::GetAtt": [ "PublicSubnet1" , "AvailabilityZone" ]}
    },
   
    "PublicSubnetCidr1": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {"Ref": "PublicSubnetCidrBlock1"}
    },
    "PublicSubnetCidr2": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {"Ref": "PublicSubnetCidrBlock2"}
    },
   "PublicSubnetCidr3": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {"Ref": "PublicSubnetCidrBlock3"}
    },
   "PublicSubnetCidr4": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {"Ref": "PublicSubnetCidrBlock4"}
    },  
     "PrivateSubnetCidr1": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {"Ref": "PrivateSubnetCidrBlock1"}
    },
   "PrivateSubnetCidr2": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {"Ref": "PrivateSubnetCidrBlock2"}
    },
   "PrivateSubnetCidr3": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {"Ref": "PrivateSubnetCidrBlock3"}
    },
   "PrivateSubnetCidr4": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {"Ref": "PrivateSubnetCidrBlock4"}
    },
    "InternetGateway": {
      "Description": "Internet Gateway Created for VPC",
      "Value": {"Ref": "InternetGateway"}
    },
    "InternalAccessSecurityGroup": {
      "Description": "Instance to Instance Access within VPC",
      "Value": {"Ref": "InternalAccessSecurityGroup"}
    },
    "RemoteAccessSecurityGroup": {
      "Description": "Remote Network or IP that can Access the instances of VPN or Direct Connect.",
      "Value": {"Ref": "RemoteAccessSecurityGroup"}
    },
  "PublicNetworkACLRuleNumbers": {
      "Description": "Public Network ACL Rules Numbers Created.",
      "Value": {
        "Fn::Join": [
          "", [
            "Inbound (",
            {"Ref": "AllowHttpToPublicRuleNumber"}, ", ",
            {"Ref": "AllowHttpsToPublicRuleNumber"}, ", ",
            {"Ref": "AllowReturnTrafficToPublicRuleNumber"}, ", ",
            {"Ref": "AllowVpcSubnetsRuleNumber"}, ") ",
            "Outbound (",
            {"Ref": "AllowAllOutboundPublicRuleNumber"}, ")"
          ]
        ]
      }
    },
    "PrivateNetworkACLRuleNumbers": {
      "Description": "Private Network ACL Rules Numbers Created.",
      "Value": {
        "Fn::Join": [
          "", [
            "Inbound (", {"Ref": "AllowAllInboundPrivateRuleNumber"}, ") ",
            "Outbound (", {"Ref": "AllowAllOutboundPrivateRuleNumber"}, ")"
          ]
        ]
      }
    },

    "DeleteAfter": {
      "Description": "It is ok to delete this Formation after this date",
      "Value": {"Ref": "DeleteAfter"}
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Ownership" },
          "Parameters" : [ "Owner", "Project", "DeleteAfter" ]
        },
        {
          "Label" : { "default" : "Remote Configurations" },
          "Parameters" : [ "RemoteAccessNetwork" ]
        },
        {
          "Label" : { "default" : "AWS Network Configurations" },
          "Parameters" : [
            "VPCSubnetCidrBlock",
            "PublicSubnetCidrBlock1",
            "PublicSubnetCidrBlock2",
            "PublicSubnetCidrBloc3",
            "PublicSubnetCidrBlock4",
            "PrivateSubnetCidrBlock1",
            "PrivateSubnetCidrBlock2",
            "PrivateSubnetCidrBlock3",
            "PrivateSubnetCidrBlock4",
            "AvailabilityZone1"
          ]
        },
       {
          "Label" : { "default" : "AWS Network ACL Rule Numbers" },
          "Parameters" : [
            "AllowHttpToPublicRuleNumber",
            "AllowHttpsToPublicRuleNumber",
            "AllowReturnTrafficToPublicRuleNumber",
            "AllowVpcSubnetsRuleNumber",
            "AllowAllOutboundPublicRuleNumber",
            "AllowAllInboundPrivateRuleNumber",
            "AllowAllOutboundPrivateRuleNumber"
          ]
        }
      ],
      "ParameterLabels" : {
        "Owner" : { "default" : "Team or Individual Owner" },
        "DeleteAfter" : { "default" : "Delete After Date" },
        "VPCSubnetCidrBlock" : { "default" : "VPC Subnet" },
        "PublicSubnetCidrBlock1" : { "default" : "Public Subnet 1" },
        "PublicSubnetCidrBlock2" : { "default" : "Public Subnet 2" },
        "PublicSubnetCidrBlock3" : { "default" : "Public Subnet 3" },
        "PublicSubnetCidrBlock4" : { "default" : "Public Subnet 4" },
        "PrivateSubnetCidrBlock1" : { "default" : "Private Subnet 1" },
        "PrivateSubnetCidrBlock2" : { "default" : "Private Subnet 2" },
        "PrivateSubnetCidrBlock3" : { "default" : "Private Subnet 3" },
        "PrivateSubnetCidrBlock4" : { "default" : "Private Subnet 4" },
        "AvailabilityZone1" : { "default" : "Availability Zone 1" },
        "AllowHttpToPublicRuleNumber" : { "default" : "HTTP to Public" },
        "AllowHttpsToPublicRuleNumber" : { "default" : "HTTPS to Public" },
        "AllowReturnTrafficToPublicRuleNumber" : { "default" : "Return Traffic to Public" },
        "AllowVpcSubnetsRuleNumber" : { "default" : "VPC Subnets to Public" },
        "AllowAllOutboundPublicRuleNumber" : { "default" : "Public Outbound" },
        "AllowAllInboundPrivateRuleNumber" : { "default" : "Private Inbound" },
        "AllowAllOutboundPrivateRuleNumber" : { "default" : "Private Outbound" }
      }
    }
  }
}
